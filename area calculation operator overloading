#include <iostream>
using namespace std;


class Shape {
public:
    virtual double calculateArea() const = 0;
};

class Rectangle : public Shape {
private:
    double width;
    double height;

public:
    Rectangle(double w, double h){
        width = w;
        height = h;
    }

    double calculateArea() const override {
        return width * height;
    }
};


class Circle : public Shape {
private:
    double radius;

public:
    Circle(double r) : radius(r) {}

  
    double calculateArea() const override {
        return 3.14 * radius * radius; // 3.14 is pi value
    }

    
};

double operator+( Rectangle rect,  Circle circle) {
    return rect.calculateArea() + circle.calculateArea();
}


double operator+(const Circle& circle, const Rectangle& rect) {
    return circle.calculateArea() + rect.calculateArea();
}

int main() {
    
    Rectangle rectangle(5.0, 3.0);
    Circle circle(2.5);

   
    std::cout << "Area of rectangle " << (rectangle + circle) << std::endl;
    std::cout << "Area of circle"  << (circle + rectangle) << std::endl;

    return 0;
}
